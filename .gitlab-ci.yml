stages:
  - lint
  - build
  - register
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: python:3
  cache:
    paths:
      - .cache/pip
  before_script:
  - python --version ; pip --version
  - pip install --upgrade pip

.doRelease:
  rules: 
    - if: $CI_COMMIT_TAG

check_formatting:
  stage: lint
  script:
    - pip install black
    - python -m black . --check

build:
  stage: build
  script:
    - pip install --upgrade build
    - python -m build
  artifacts:
    paths:
      - dist/

register_package:
  extends: .doRelease
  stage: register
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} 
      TWINE_USERNAME=gitlab-ci-token 
      python -m twine upload 
      --verbose
      --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

release_job:
  extends: .doRelease
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  inherit:
    default: false
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    